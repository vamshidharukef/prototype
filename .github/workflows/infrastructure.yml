name: Infrastructure 🔨
run-name: Proto-type base infrastructure build from ${{ github.repository }}

on:
  push:
    branches:
      - main
env:
  PRODUCT: prototype
  ENVIRONMENT: infrastructure
  TIMEZONE: '${{ vars.TIMEZONE }}'
  # Deployment environment target i.e., `development`, `staging`, `production`
  TARGET: ${{ vars.ENVIRONMENT }}

jobs:
# 1. Setup infrastructure variables
  setup:
    name: Setup 🔧
    runs-on: [ubuntu-latest]
    outputs:
      environment: ${{ env.ENVIRONMENT }}
      timezone: ${{ env.TIMEZONE }}
    steps:
      - name: Repository 🗃️
        uses: actions/checkout@v4

      - name: Environment 🧪
        run: echo "Environment set to ${{ env.ENVIRONMENT }}"

      - name: Timezone 🌐
        run: echo "Timezone set to ${{ env.TIMEZONE }}"

      - name: Login 🔐
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} 

      - name: Azure defaults ✨
        uses: azure/cli@v2
        with:
          inlineScript: |
            # Basic
            az configure --defaults location=${{ vars.REGION }}
            az configure --defaults group=rg-${{ env.PRODUCT }}-${{ env.TARGET }}-${{ vars.VERSION }}

      - name: Resource group 🏗️
        uses: azure/cli@v2
        with:
          inlineScript: |
            az group create \
            --location ${{ vars.REGION }} \
            --resource-group rg-${{ env.PRODUCT }}-${{ env.TARGET }}-${{ vars.VERSION }} \
            --name rg-${{ env.PRODUCT }}-${{ env.TARGET }}-${{ vars.VERSION }}            
            
      - name: Set Resource Group Name
        run: echo "RESOURCE_GROUP_NAME=rg-${{ env.PRODUCT }}-${{ env.TARGET }}-${{ vars.VERSION }}" >> $GITHUB_ENV

      - name: Deploy Azure Resources
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          template: ./infrastructure/main.bicep
          parameters: |
            webAppName=${{ vars.WEBAPPNAME }}
            appServicePlanName=${{ vars.APPSERVICEPLANNAME }}
            frontDoorName=${{ vars.FRONTDOORNAME }}
            wafPolicyName=${{ vars.WAFPOLICYNAME }}
            sku=${{ vars.SKU }}
            logPlan=${{ vars.LOGPLAN }}
            location=${{ vars.LOCATION }}
            logQuota=${{ vars.LOGQUOTA }}
            logRetentionDays=${{ vars.LOGRETENTIONDAYS }}
            vnetAddressPrefix=${{ vars.VNETADDRESSPREFIX }}
            vnetSubnetPrivatePrefix=${{ vars.VNETSUBNETPRIVATEPREFIX }}
            vnetSubnetWebappPrefix=${{ vars.VNETSUBNETWEBAPPPREFIX }}            
          scope: resourcegroup                                       
  

      
