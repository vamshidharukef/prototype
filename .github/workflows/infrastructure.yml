name: Infrastructure ðŸ”¨
run-name: Proto-type base infrastructure build from ${{ github.repository }}

on:
  push:
    branches:
      - main
env:
  PRODUCT: prototype
  ENVIRONMENT: infrastructure
  TIMEZONE: '${{ vars.TIMEZONE }}'
  # Deployment environment target i.e., `development`, `staging`, `production`
  TARGET: ${{ vars.ENVIRONMENT }}

jobs:
# 1. Setup infrastructure variables
  deploy-infrastructure:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Azure Resources
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ secrets.AZURE_RESOURCE_GROUP }}
          template: ./infrastructure/main.bicep
          parameters: ./infrastructure/parameters.json

      - name: Configure IP Restrictions
        run: |
          az webapp config access-restriction add --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.AZURE_WEBAPP_NAME }} \
            --rule-name "Allow specific IPs" \
            --action Allow \
            --ip-address ${{ secrets.ALLOWED_IP_RANGES }} \
            --priority 1000

      - name: Check if Azure Front Door profile exists
        id: check_fd
        run: |
          profile_exists=$(az afd profile show --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --profile-name ${{ secrets.AZURE_FRONTDOOR_NAME }} --query id --output tsv 2>/dev/null)
          if [ -n "$profile_exists" ]; then
            echo "Front Door profile already exists"
            echo "fd_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Front Door profile does not exist"
            echo "fd_exists=false" >> $GITHUB_OUTPUT
          fi


      - name: Create Azure Front Door (Standard)
        run: |
          az afd profile create --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --profile-name ${{ secrets.AZURE_FRONTDOOR_NAME }} \
            --sku Standard_Microsoft 
      
      - name: Create route in Azure Front Door
        run: |
          az afd route create --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --profile-name ${{ secrets.AZURE_FRONTDOOR_NAME }} \
            --endpoint-name default \
            --origin-group default \
            --route-name default \
            --supported-protocols Http Https \
            --patterns-to-match '/*' \
            --forwarding-protocol MatchRequest

      - name: Create WAF Policy for Front Door
        run: |
          az network front-door waf-policy create \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --name ${{ secrets.WAF_POLICY_NAME }} \
            --sku Standard_Microsoft \
            --mode Prevention

      - name: Apply WAF Policy to Front Door
        run: |
          az afd security-policy create \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --profile-name ${{ secrets.AZURE_FRONTDOOR_NAME }} \
            --security-policy-name default-security-policy \
            --waf-policy ${{ secrets.WAF_POLICY_NAME }}
