name: Deployment
run-name: üöÄ Deploying from ${{ github.ref_name }}

on:
  schedule:
    - cron: '0 2 * * *'

  push:
    branches:
      # Manual deployment
      - main      

env:
  PRODUCT: exip
  ENVIRONMENT: ${{ github.ref_name }}
  TIMEZONE: ${{ vars.TIMEZONE }}

jobs:
  # 1. Base actions configrations
  setup:
    name: Setup üîß
    runs-on: [ubuntu-latest]
    outputs:
      product: ${{ env.PRODUCT }}
      environment: ${{ steps.environment.outputs.environment }}
      timezone: ${{ env.TIMEZONE }}

    steps:
      - name: Environment üß™
        id: environment
        run: |
          if [[ "${{ env.ENVIRONMENT }}" == "main" ]]; then
            echo "environment=dev" >> "$GITHUB_OUTPUT"
          else
            echo "environment=${{ env.ENVIRONMENT }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Timezone üåê
        run: echo "Timezone set to ${{ env.TIMEZONE }}"

      # 2. WebApp deployment
  webapp:
    name: WebApp üåê
    needs: [setup]
    environment: ${{ needs.setup.outputs.environment }}
    runs-on: [ubuntu-latest]
    env:
      ENVIRONMENT: ${{ needs.setup.outputs.environment }}

    strategy:
      max-parallel: 1
      # Do not cancel in-progress jobs upon failure
      fail-fast: false
      # Single dimension matrix
      matrix:
        webapp: ['vamshi-test']

    concurrency:
      group: deployment-webapp-${{ github.workflow }}-${{ github.workflow_ref }}-${{ matrix.webapp }}
      cancel-in-progress: true

    steps:
      - name: Repository üóÇÔ∏èüåé
        uses: actions/checkout@v4

      
      - name: Deploy ‚ö°
        uses: ./.github/actions/webapp
        with:
          region: ${{ vars.REGION }}
          group: rg-${{ env.PRODUCT }}-${{ env.ENVIRONMENT }}-${{ vars.VERSION }}
          credentials: ${{ secrets.AZURE_CREDENTIALS }}
          

      - name: UI üß±
        uses: azure/cli@v2
        if: ${{ 'vamshi-test' == matrix.webapp }}
        with:
          inlineScript: |
            az webapp config appsettings set \
            --name app-${{ env.PRODUCT }}-ui-${{ env.ENVIRONMENT }}-${{ vars.VERSION }} \
            --settings \
            TZ='${{ vars.TIMEZONE }}' \
            NODE_ENV='${{ vars.NODE_ENV }}'   