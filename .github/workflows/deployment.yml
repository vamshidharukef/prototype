# Deployment Workflow
#
# This GitHub Actions workflow automates the deployment process for the prototype project.
# It is triggered after the Infrastructure workflow completes or on a daily schedule.
#
# Key features:
# 1. Sets up the environment and determines the deployment target (dev for main branch)
# 2. Deploys the web application to Azure App Service
# 3. Configures web app settings post-deployment
#
# The workflow includes:
# - Environment setup and variable configuration
# - Azure login and credential management
# - Web app deployment using a matrix strategy for multiple apps
# - App settings configuration for specific web apps
#
# Note: Ensure all required secrets (AZURE_CREDENTIALS) and variables are set in the
# GitHub repository settings before running this workflow.

name: Deployment
run-name: üöÄ Deploying from ${{ github.ref_name }}

on:
  workflow_run:
    workflows: ["Infrastructure üî®"]
    types:
      - completed
  schedule:
    - cron: '0 2 * * *'

env:
  PRODUCT: prototype
  ENVIRONMENT: ${{ github.ref_name }}
  TIMEZONE: ${{ vars.TIMEZONE }}

jobs:
  # 1. Base actions configrations
  setup:
    name: Setup üîß
    runs-on: [ubuntu-latest]
    outputs:
      product: ${{ env.PRODUCT }}
      timezone: ${{ env.TIMEZONE }}

    steps:
      - name: Environment üß™
        id: environment
        run: |
          if [[ "${{ env.ENVIRONMENT }}" == "main" ]]; then
            echo "environment=dev" >> "$GITHUB_OUTPUT"
          else
            echo "environment=${{ env.ENVIRONMENT }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Timezone üåê
        run: echo "Timezone set to ${{ env.TIMEZONE }}"

      # 2. WebApp deployment
  webapp:
    name: WebApp üåê
    needs: [setup]
    runs-on: [ubuntu-latest]    

    strategy:
      max-parallel: 1
      # Do not cancel in-progress jobs upon failure
      fail-fast: false
      # Single dimension matrix
      matrix:
        webapp: ['vamshi-test']

    concurrency:
      group: deployment-webapp-${{ github.workflow }}-${{ github.workflow_ref }}-${{ matrix.webapp }}
      cancel-in-progress: true

    steps:
      - name: Repository üóÇÔ∏èüåé
        uses: actions/checkout@v4

      - name: Login to Azure üîê
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get Publishing Profile
        shell: pwsh
        run: |
          $profile = az webapp deployment list-publishing-profiles --name ${{ matrix.webapp }} --resource-group rg-${{ env.PRODUCT }}--${{ vars.VERSION }} --xml
          $profile = $profile -replace "`n",""
          $profile = $profile -replace "`r",""
          $profile = $profile -replace "'",""
          Write-Output "::add-mask::$profile"
          Add-Content -Path $env:GITHUB_ENV -Value "AZURE_WEBAPP_PUBLISH_PROFILE=$profile"

      
      - name: Deploy to WebApp ‚ö°
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ matrix.webapp }}
          publish-profile: ${{ env.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .

          

      - name: Configure WebApp Settings üß±
        shell: pwsh
        if: ${{ 'vamshi-test' == matrix.webapp }}
        run: |
          az webapp config appsettings set `
            --name ${{ matrix.webapp }} `
            --resource-group rg-${{ env.PRODUCT }}--${{ vars.VERSION }} `
            --settings `
            TZ='${{ vars.TIMEZONE }}' `
            NODE_ENV='${{ vars.NODE_ENV }}'